{"version":3,"sources":["firebase.js","Components/Todo.js","Components/Hero.jsx","Components/Svg.svg","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","useState","state","setState","edit","setEdit","save","setSave","editHandler","collection","doc","todo","id","set","merge","ListItemText","placeholder","value","onChange","event","target","label","variant","Button","size","color","disabled","type","onClick","e","ButtonGroup","disableElevation","delete","className","App","todos","setTodos","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","TextField","InputLabelProps","style","preventDefault","add","timestamp","FieldValue","serverTimestamp","i","src","Svg","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAaeA,EAXKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,Y,4DCoDRC,MAzDf,SAAcC,GAAQ,IAAD,EACOC,oBAAS,GADhB,mBACZC,EADY,KACLC,EADK,OAEKF,mBAAS,IAFd,mBAEZG,EAFY,KAENC,EAFM,OAGKJ,mBAAS,SAHd,mBAGZK,EAHY,KAGNC,EAHM,KAKbC,EAAc,WAClBpB,EAAGqB,WAAW,SAASC,IAAIV,EAAMW,KAAKC,IAAIC,IACxC,CACEF,KAAMP,GAER,CAAEU,OAAO,IAEXX,EAASG,IAEX,OACE,mCACE,gCACE,cAACS,EAAA,EAAD,UACGb,EACC,iCACE,uBACEc,YAAahB,EAAMW,KAAKA,KACxBM,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAWd,EAAQc,EAAMC,OAAOH,QAC1CI,MAAM,SACNC,QAAQ,WAEV,cAACC,EAAA,EAAD,CACED,QAAQ,YACRE,KAAK,QACLC,MAAM,UACNC,UAAWtB,EACXuB,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOtB,EAAQC,IAN1B,qBAYFR,EAAMW,KAAKA,OAGf,eAACmB,EAAA,EAAD,CAAaC,kBAAgB,EAACT,QAAQ,YAAYG,MAAM,UAAxD,UACE,cAAC,IAAD,CACEG,QAAS,SAACT,GAAD,OACP/B,EAAGqB,WAAW,SAASC,IAAIV,EAAMW,KAAKC,IAAIoB,UAE5CV,QAAQ,WACRG,MAAM,cAER,cAAC,IAAD,CAAUG,QAASzB,OAErB,oBAAI8B,UAAU,a,SC3CP,SAASC,IAAO,IAAD,EACFjC,mBAAS,CAAC,KADR,mBACrBkC,EADqB,KACdC,EADc,OAEFnC,mBAAS,IAFP,mBAErBoC,EAFqB,KAEdC,EAFc,KAG5BC,qBAAU,WACRnD,EAAGqB,WAAW,SACX+B,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXN,EACEM,EAASC,KAAKC,KAAI,SAAClC,GAAD,MAAU,CAAEE,GAAIF,EAAIE,GAAID,KAAMD,EAAImC,OAAOlC,eAGhE,IAYH,OACE,qCACE,oBAAIsB,UAAU,UAAd,uBACA,uBAAMA,UAAU,OAAhB,UACE,cAACa,EAAA,EAAD,CACEC,gBAAiB,CACfC,MAAO,CAAEvB,MAAO,SAElBQ,UAAU,QACVhB,MAAOoB,EACPnB,SAAU,SAACC,GAAD,OAAWmB,EAASnB,EAAMC,OAAOH,QAC3CL,GAAG,iBACHS,MAAM,eAGR,eAACE,EAAA,EAAD,CACED,QAAQ,YACRE,KAAK,QACLC,MAAM,YACNC,UAAWW,EACXV,KAAK,SACLC,QA/BQ,SAACT,GACfA,EAAM8B,iBACN7D,EAAGqB,WAAW,SAASyC,IAAI,CACzBvC,KAAM0B,EACNc,UAAW9D,IAASS,UAAUsD,WAAWC,oBAG3Cf,EAAS,KAkBL,gBAQM,UAaR,6BACGH,EAAMS,KAAI,SAACjC,EAAM2C,GAAP,OACT,cAAC,EAAD,CAAM3C,KAAMA,Y,UC7EP,MAA0B,gCCa1BuB,MATf,WACE,OACE,sBAAKD,UAAU,cAAf,UACE,cAAC,EAAD,IACA,qBAAKsB,IAAKC,EAAKC,IAAI,GAAGxB,UAAU,YCHtCyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.73efb27d.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyARaXKsyZlb44nx_9B4aUN3A7GKTaz_jUY\",\r\n  authDomain: \"todo-app-da7d9.firebaseapp.com\",\r\n  projectId: \"todo-app-da7d9\",\r\n  storageBucket: \"todo-app-da7d9.appspot.com\",\r\n  messagingSenderId: \"591570575065\",\r\n  appId: \"1:591570575065:web:0855641849346f79cda8c8\",\r\n  measurementId: \"G-MWBTYM6G03\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db;\r\n","import React, { useState } from \"react\";\r\nimport db from \"../firebase\";\r\nimport { ListItemText, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport \"./Hero.css\";\r\n\r\nfunction Todo(props) {\r\n  const [state, setState] = useState(false);\r\n  const [edit, setEdit] = useState(\"\");\r\n  const [save, setSave] = useState(\"false\");\r\n\r\n  const editHandler = () => {\r\n    db.collection(\"todos\").doc(props.todo.id).set(\r\n      {\r\n        todo: edit,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setState(save);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <ListItemText>\r\n          {state ? (\r\n            <form>\r\n              <input\r\n                placeholder={props.todo.todo}\r\n                value={edit}\r\n                onChange={(event) => setEdit(event.target.value)}\r\n                label=\"Filled\"\r\n                variant=\"filled\"\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                disabled={!edit}\r\n                type=\"submit\"\r\n                onClick={(e) => setSave(editHandler)}\r\n              >\r\n                Save\r\n              </Button>\r\n            </form>\r\n          ) : (\r\n            props.todo.todo\r\n          )}\r\n        </ListItemText>\r\n        <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n          <DeleteIcon\r\n            onClick={(event) =>\r\n              db.collection(\"todos\").doc(props.todo.id).delete()\r\n            }\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n          />\r\n          <EditIcon onClick={setState} />\r\n        </ButtonGroup>\r\n        <hr className=\"hr\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Todo;\r\n","import \"./Hero.css\";\r\nimport Todo from \"./Todo\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport db from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\n// const styles = makeStyles((theme) => ({\r\n//   container: {\r\n//     width: 530,\r\n//     [theme.breakpoints.down(\"xs\")]: {\r\n//       width: 100,\r\n//     },\r\n//   },\r\n// }));\r\n\r\nexport default function App() {\r\n  const [todos, setTodos] = useState([\"\"]);\r\n  const [input, setInput] = useState(\"\");\r\n  useEffect(() => {\r\n    db.collection(\"todos\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setTodos(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, todo: doc.data().todo }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const addTodo = (event) => {\r\n    event.preventDefault(); //stop refreshing page ..store todos IMPORTANT!\r\n    db.collection(\"todos\").add({\r\n      todo: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    // setTodos([...todos, input])\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"heading\">Todo-List</h1>\r\n      <form className=\"form\">\r\n        <TextField\r\n          InputLabelProps={{\r\n            style: { color: \"#fff\" },\r\n          }}\r\n          className=\"input\"\r\n          value={input}\r\n          onChange={(event) => setInput(event.target.value)}\r\n          id=\"standard-basic\"\r\n          label=\"New Task..\"\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"secondary\"\r\n          disabled={!input}\r\n          type=\"submit\"\r\n          onClick={addTodo}\r\n        >\r\n          ADD{\" \"}\r\n        </Button>\r\n\r\n        {/* <AddCircleIcon\r\n          disabled={!input}\r\n          type=\"submit\"\r\n          onClick={addTodo}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          Add todos\r\n        </AddCircleIcon> */}\r\n      </form>\r\n      <ul>\r\n        {todos.map((todo, i) => (\r\n          <Todo todo={todo} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Svg.d60fcc93.svg\";","import React from \"react\";\nimport Hero from \"./Components/Hero\";\nimport \"./App.css\";\nimport Svg from \"./Components/Svg.svg\";\nfunction App() {\n  return (\n    <div className=\"text-center\">\n      <Hero />\n      <img src={Svg} alt=\"\" className=\"svg\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}