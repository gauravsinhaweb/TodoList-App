[{"D:\\Projects\\todolist-app\\src\\index.js":"1","D:\\Projects\\todolist-app\\src\\App.js":"2","D:\\Projects\\todolist-app\\src\\firebase.js":"3","D:\\Projects\\todolist-app\\src\\Components\\Hero.jsx":"4","D:\\Projects\\todolist-app\\src\\Components\\Todo.js":"5"},{"size":359,"mtime":1613756151203,"results":"6","hashOfConfig":"7"},{"size":226,"mtime":1613759504721,"results":"8","hashOfConfig":"7"},{"size":456,"mtime":1609958046922,"results":"9","hashOfConfig":"7"},{"size":2205,"mtime":1619292736005,"results":"10","hashOfConfig":"7"},{"size":2710,"mtime":1619291669173,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1jbg3nj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\Projects\\todolist-app\\src\\index.js",[],["24","25"],"D:\\Projects\\todolist-app\\src\\App.js",[],"D:\\Projects\\todolist-app\\src\\firebase.js",[],"D:\\Projects\\todolist-app\\src\\Components\\Hero.jsx",[],"D:\\Projects\\todolist-app\\src\\Components\\Todo.js",["26"],"import React, { useState } from \"react\";\r\nimport db from \"../firebase\";\r\nimport {\r\n  ListItemText,\r\n  ButtonGroup,\r\n  Button,\r\n  Checkbox,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport \"./Hero.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Todo(props) {\r\n  const [state, setState] = useState(false);\r\n  const [edit, setEdit] = useState(\"\");\r\n  const [save, setSave] = useState();\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const editHandler = () => {\r\n    db.collection(\"todos\").doc(props.todo.id).set(\r\n      {\r\n        todo: edit,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setEdit(\"\");\r\n    setState(save);\r\n  };\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      fontSize: \" 20px\",\r\n      fontFamily: \"lato\",\r\n      marginTop: \"1rem\",\r\n      color: \"#000\",\r\n      textTransform: \"capitalize\",\r\n    },\r\n    checked: {\r\n      fontSize: \" 20px\",\r\n      fontFamily: \"lato\",\r\n      marginTop: \"1rem\",\r\n      color: \"#C0C0C0\",\r\n      textTransform: \"capitalize\",\r\n      textDecoration: \"line-through\",\r\n      textDecorationColor: \"#696969\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ListItemText className={toggle ? classes.checked : classes.root}>\r\n        {\" \"}\r\n        <input\r\n          value=\"checked\"\r\n          className={state ? \"displayNone\" : \"checkbox\"}\r\n          type=\"checkbox\"\r\n          onClick={() => setToggle(!toggle)}\r\n        />\r\n        {state ? (\r\n          <form>\r\n            <TextField\r\n              placeholder={props.todo.todo}\r\n              value={edit}\r\n              onChange={(event) => setEdit(event.target.value)}\r\n              className=\"input_save\"\r\n            />\r\n\r\n            <span className={edit.length > 0 ? \"display\" : \"displayNone\"}>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                disabled={!edit}\r\n                type=\"submit\"\r\n                onClick={(e) => setSave(editHandler)}\r\n              >\r\n                Save\r\n              </Button>\r\n            </span>\r\n          </form>\r\n        ) : (\r\n          props.todo.todo\r\n        )}\r\n      </ListItemText>\r\n      <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n        <DeleteIcon\r\n          onClick={(event) =>\r\n            db.collection(\"todos\").doc(props.todo.id).delete()\r\n          }\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n        />\r\n        <EditIcon onClick={() => setState(!state)} />\r\n      </ButtonGroup>\r\n      <hr className=\"hr\" />\r\n    </>\r\n  );\r\n}\r\nexport default Todo;\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":7,"column":3,"nodeType":"33","messageId":"34","endLine":7,"endColumn":11},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]